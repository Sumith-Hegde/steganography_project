{"ast":null,"code":"const fs = require('fs');\n\nconst img = require('image-size');\n\nconst stego = require('stegano');\n\nfunction embedMessage(imageURL, message) {\n  // Load the image from the URL.\n  const imgData = fs.readFileSync(imageURL); // Get the size of the image.\n\n  const {\n    width,\n    height\n  } = img(imgData); // Create a new image object with the same size as the original image.\n\n  const newImage = new Image();\n  newImage.width = width;\n  newImage.height = height; // Embed the message into the image.\n\n  stego.embed(newImage, message); // Save the modified image to a file.\n\n  const newImageURL = `./output.png`;\n  fs.writeFileSync(newImageURL, newImage); // Return the URL of the modified image.\n\n  return newImageURL;\n}\n\nfunction decodeMessage(imageURL) {\n  // Load the image from the URL.\n  const imgData = fs.readFileSync(imageURL); // Get the size of the image.\n\n  const {\n    width,\n    height\n  } = img(imgData); // Create a new image object with the same size as the original image.\n\n  const newImage = new Image();\n  newImage.width = width;\n  newImage.height = height; // Decode the message from the image.\n\n  const message = stego.decode(newImage); // Return the message.\n\n  return message;\n}\n\nmodule.exports = {\n  embedMessage,\n  decodeMessage\n};","map":{"version":3,"sources":["D:/VS_Code/VS_Code_general_Workspace/finalYearProject/chatApp/src/components/steganogarphy.js"],"names":["fs","require","img","stego","embedMessage","imageURL","message","imgData","readFileSync","width","height","newImage","Image","embed","newImageURL","writeFileSync","decodeMessage","decode","module","exports"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,YAAD,CAAnB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,SAAD,CAArB;;AAEA,SAASG,YAAT,CAAsBC,QAAtB,EAAgCC,OAAhC,EAAyC;AACvC;AACA,QAAMC,OAAO,GAAGP,EAAE,CAACQ,YAAH,CAAgBH,QAAhB,CAAhB,CAFuC,CAIvC;;AACA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBR,GAAG,CAACK,OAAD,CAA7B,CALuC,CAOvC;;AACA,QAAMI,QAAQ,GAAG,IAAIC,KAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACF,KAAT,GAAiBA,KAAjB;AACAE,EAAAA,QAAQ,CAACD,MAAT,GAAkBA,MAAlB,CAVuC,CAYvC;;AACAP,EAAAA,KAAK,CAACU,KAAN,CAAYF,QAAZ,EAAsBL,OAAtB,EAbuC,CAevC;;AACA,QAAMQ,WAAW,GAAI,cAArB;AACAd,EAAAA,EAAE,CAACe,aAAH,CAAiBD,WAAjB,EAA8BH,QAA9B,EAjBuC,CAmBvC;;AACA,SAAOG,WAAP;AACD;;AAED,SAASE,aAAT,CAAuBX,QAAvB,EAAiC;AAC/B;AACA,QAAME,OAAO,GAAGP,EAAE,CAACQ,YAAH,CAAgBH,QAAhB,CAAhB,CAF+B,CAI/B;;AACA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBR,GAAG,CAACK,OAAD,CAA7B,CAL+B,CAO/B;;AACA,QAAMI,QAAQ,GAAG,IAAIC,KAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACF,KAAT,GAAiBA,KAAjB;AACAE,EAAAA,QAAQ,CAACD,MAAT,GAAkBA,MAAlB,CAV+B,CAY/B;;AACA,QAAMJ,OAAO,GAAGH,KAAK,CAACc,MAAN,CAAaN,QAAb,CAAhB,CAb+B,CAe/B;;AACA,SAAOL,OAAP;AACD;;AAEDY,MAAM,CAACC,OAAP,GAAiB;AACff,EAAAA,YADe;AAEfY,EAAAA;AAFe,CAAjB","sourcesContent":["const fs = require('fs');\r\nconst img = require('image-size');\r\nconst stego = require('stegano');\r\n\r\nfunction embedMessage(imageURL, message) {\r\n  // Load the image from the URL.\r\n  const imgData = fs.readFileSync(imageURL);\r\n\r\n  // Get the size of the image.\r\n  const { width, height } = img(imgData);\r\n\r\n  // Create a new image object with the same size as the original image.\r\n  const newImage = new Image();\r\n  newImage.width = width;\r\n  newImage.height = height;\r\n\r\n  // Embed the message into the image.\r\n  stego.embed(newImage, message);\r\n\r\n  // Save the modified image to a file.\r\n  const newImageURL = `./output.png`;\r\n  fs.writeFileSync(newImageURL, newImage);\r\n\r\n  // Return the URL of the modified image.\r\n  return newImageURL;\r\n}\r\n\r\nfunction decodeMessage(imageURL) {\r\n  // Load the image from the URL.\r\n  const imgData = fs.readFileSync(imageURL);\r\n\r\n  // Get the size of the image.\r\n  const { width, height } = img(imgData);\r\n\r\n  // Create a new image object with the same size as the original image.\r\n  const newImage = new Image();\r\n  newImage.width = width;\r\n  newImage.height = height;\r\n\r\n  // Decode the message from the image.\r\n  const message = stego.decode(newImage);\r\n\r\n  // Return the message.\r\n  return message;\r\n}\r\n\r\nmodule.exports = {\r\n  embedMessage,\r\n  decodeMessage\r\n};\r\n"]},"metadata":{},"sourceType":"module"}