{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_Code\\\\VS_Code_general_Workspace\\\\finalYearProject\\\\chatApp\\\\src\\\\components\\\\Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport im from 'D:/VS_Code/VS_Code_general_Workspace/finalYearProject/chatApp/src/images/im.jpg';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { Timestamp, arrayUnion, doc, serverTimestamp, updateDoc } from 'firebase/firestore';\nimport { db, storage } from '../firebase';\nimport { v4 as uuid } from 'uuid'; // import Jimp from 'jimp'\n\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n\n  const steganography = require('./steganogarphy');\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      const add = \"\";\n\n      for (let index = 0; index < 33 - text.length; index++) {\n        ad = add + \" \";\n      }\n\n      const reader = new FileReader();\n\n      reader.onload = async () => {\n        const imageDataUrl = reader.result;\n        steganography.encode(imageDataUrl, \" \" + text + add).then(modifiedImageURL => {\n          console.log('Modified Image URL:', modifiedImageURL);\n          updateDoc(doc(db, \"chats\", data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: modifiedImageURL\n            })\n          });\n        }).catch(error => {\n          console.error('Error:', error);\n        });\n      };\n\n      reader.readAsDataURL(img);\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    setText(\"\");\n    setImg(null);\n  };\n\n  const handleChange = e => {\n    setImg(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type...\",\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        id: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: im,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"q//4GW5ClIVGNoMS/xADfe+Jtn4=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["D:/VS_Code/VS_Code_general_Workspace/finalYearProject/chatApp/src/components/Input.jsx"],"names":["React","useContext","useState","useRef","useEffect","im","AuthContext","ChatContext","Timestamp","arrayUnion","doc","serverTimestamp","updateDoc","db","storage","v4","uuid","getDownloadURL","ref","uploadBytesResumable","Input","text","setText","img","setImg","currentUser","data","steganography","require","handleSend","storageRef","uploadTask","add","index","length","ad","reader","FileReader","onload","imageDataUrl","result","encode","then","modifiedImageURL","console","log","chatId","messages","id","senderId","uid","date","now","catch","error","readAsDataURL","user","handleChange","e","target","files","value","display"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, useEffect } from 'react'\r\nimport im from 'D:/VS_Code/VS_Code_general_Workspace/finalYearProject/chatApp/src/images/im.jpg'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { ChatContext } from '../context/ChatContext'\r\nimport { Timestamp, arrayUnion, doc, serverTimestamp, updateDoc } from 'firebase/firestore'\r\nimport { db, storage } from '../firebase'\r\nimport { v4 as uuid } from 'uuid'\r\n// import Jimp from 'jimp'\r\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage'\r\n\r\nconst Input = () => {\r\n  const [text,setText]=useState(\"\")\r\n  const [img,setImg]=useState(null)\r\n  const {currentUser}=useContext(AuthContext)\r\n  const {data}=useContext(ChatContext)\r\n  const steganography=require('./steganogarphy')\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  const handleSend=async()=>{\r\n    if(img){\r\n        const storageRef = ref(storage, uuid());\r\n        const uploadTask = uploadBytesResumable(storageRef, img); \r\n        const add=\"\";\r\n        for (let index = 0; index < 33-text.length; index++) {\r\n          ad=add+\" \";\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = async () => {\r\n        const imageDataUrl = reader.result;\r\n        steganography.encode(imageDataUrl, \" \"+text+add)\r\n    .then((modifiedImageURL) => {\r\n      console.log('Modified Image URL:', modifiedImageURL);\r\n      updateDoc(doc(db, \"chats\", data.chatId), {\r\n        messages: arrayUnion({\r\n          id: uuid(),\r\n          senderId: currentUser.uid,\r\n          date: Timestamp.now(),\r\n          img: modifiedImageURL,\r\n        }),\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n        }\r\n      reader.readAsDataURL(img);\r\n\r\n    } else{\r\n      await updateDoc(doc(db,\"chats\",data.chatId),{\r\n        messages:arrayUnion({\r\n          id:uuid(),\r\n          text,\r\n          senderId:currentUser.uid,\r\n          date:Timestamp.now()\r\n        })\r\n      })\r\n    }\r\n    await updateDoc(doc(db,\"userChats\",currentUser.uid),{\r\n      [data.chatId+\".lastMessage\"]:{\r\n        text\r\n      },\r\n      [data.chatId+\".date\"]:serverTimestamp()\r\n    })\r\n    await updateDoc(doc(db,\"userChats\",data.user.uid),{\r\n      [data.chatId+\".lastMessage\"]:{\r\n        text\r\n      },\r\n      [data.chatId+\".date\"]:serverTimestamp()\r\n    })\r\n\r\n    setText(\"\")\r\n    setImg(null)\r\n  }\r\n  const handleChange=(e)=>{\r\n    setImg(e.target.files[0])\r\n  }\r\n  return (\r\n    <div className='input'>\r\n      <input type=\"text\" placeholder='Type...' onChange={e=>setText(e.target.value)} value={text} />\r\n      <div className=\"send\">\r\n        <input type=\"file\" style={{display:'none'}} id='file' onChange={handleChange}/>\r\n        <label htmlFor=\"file\">\r\n          <img src={im} alt=\"\"/>\r\n        </label>\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Input"]},"metadata":{},"sourceType":"module"}