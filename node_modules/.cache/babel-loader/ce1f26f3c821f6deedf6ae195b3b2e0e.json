{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_Code\\\\VS_Code_general_Workspace\\\\finalYearProject\\\\chatApp\\\\src\\\\components\\\\Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport at from 'D:/VS_Code/VS_Code_general_Workspace/finalYearProject/chatApp/src/images/at.png';\nimport im from 'D:/VS_Code/VS_Code_general_Workspace/finalYearProject/chatApp/src/images/im.jpg';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { Timestamp, arrayUnion, doc, serverTimestamp, updateDoc } from 'firebase/firestore';\nimport { db, storage } from '../firebase';\nimport { v4 as uuid } from 'uuid';\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\nimport Jimp from 'jimp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      const reader = new FileReader();\n      let fileData = null; // Set up the FileReader onload event\n\n      reader.onload = function (e) {\n        // Get the file data\n        fileData = e.target.result;\n        Jimp.read(fileData, async (err, image) => {\n          if (err) {\n            console.error(err);\n            return;\n          } else {\n            console.log(\"width\");\n            console.log(image.bitmap.width);\n          }\n        });\n      }; // Read the file as a data URL\n\n\n      reader.readAsDataURL(img);\n      uploadTask.on(error => {// setErr(true);\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateDoc(doc(db, \"chats\", data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    setText(\"\");\n    setImg(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type...\",\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        id: \"file\",\n        onChange: e => setImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: im,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"q//4GW5ClIVGNoMS/xADfe+Jtn4=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["D:/VS_Code/VS_Code_general_Workspace/finalYearProject/chatApp/src/components/Input.jsx"],"names":["React","useContext","useState","at","im","AuthContext","ChatContext","Timestamp","arrayUnion","doc","serverTimestamp","updateDoc","db","storage","v4","uuid","getDownloadURL","ref","uploadBytesResumable","Jimp","Input","text","setText","img","setImg","currentUser","data","handleSend","storageRef","uploadTask","reader","FileReader","fileData","onload","e","target","result","read","err","image","console","error","log","bitmap","width","readAsDataURL","on","snapshot","then","downloadURL","chatId","messages","id","senderId","uid","date","now","user","value","display","files"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport at from 'D:/VS_Code/VS_Code_general_Workspace/finalYearProject/chatApp/src/images/at.png'\r\nimport im from 'D:/VS_Code/VS_Code_general_Workspace/finalYearProject/chatApp/src/images/im.jpg'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { ChatContext } from '../context/ChatContext'\r\nimport { Timestamp, arrayUnion, doc, serverTimestamp, updateDoc } from 'firebase/firestore'\r\nimport { db, storage } from '../firebase'\r\nimport { v4 as uuid } from 'uuid'\r\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage'\r\nimport Jimp from 'jimp'; \r\nconst Input = () => {\r\n  const [text,setText]=useState(\"\")\r\n  const [img,setImg]=useState(null)\r\n  const {currentUser}=useContext(AuthContext)\r\n  const {data}=useContext(ChatContext)\r\n  \r\n  \r\n  \r\n  \r\n  const handleSend=async()=>{\r\n    if(img){\r\n      const storageRef = ref(storage, uuid());\r\n      const uploadTask = uploadBytesResumable(storageRef, img);\r\n      \r\n      const reader = new FileReader();\r\n      let fileData =null;\r\n      \r\n      // Set up the FileReader onload event\r\n      reader.onload = function(e) {\r\n        // Get the file data\r\n        fileData=e.target.result;\r\n        Jimp.read(fileData, async (err, image) => {\r\n          if (err) {\r\n            console.error(err);\r\n            return;\r\n          }\r\n          else{\r\n            console.log(\"width\")\r\n            console.log(image.bitmap.width)\r\n          }\r\n        })\r\n\r\n      };\r\n      \r\n      // Read the file as a data URL\r\n      reader.readAsDataURL(img);\r\n      uploadTask.on(\r\n        (error) => {\r\n          // setErr(true);\r\n        },\r\n        () => {\r\n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\r\n            await updateDoc(doc(db, \"chats\", data.chatId), {\r\n              messages: arrayUnion({\r\n                id: uuid(),\r\n                text,\r\n                senderId: currentUser.uid,\r\n                date: Timestamp.now(),\r\n                img: downloadURL,\r\n              }),\r\n            });\r\n          });\r\n        }\r\n        );\r\n      } else{\r\n      await updateDoc(doc(db,\"chats\",data.chatId),{\r\n        messages:arrayUnion({\r\n          id:uuid(),\r\n          text,\r\n          senderId:currentUser.uid,\r\n          date:Timestamp.now()\r\n        })\r\n      })\r\n    }\r\n    await updateDoc(doc(db,\"userChats\",currentUser.uid),{\r\n      [data.chatId+\".lastMessage\"]:{\r\n        text\r\n      },\r\n      [data.chatId+\".date\"]:serverTimestamp()\r\n    })\r\n    await updateDoc(doc(db,\"userChats\",data.user.uid),{\r\n      [data.chatId+\".lastMessage\"]:{\r\n        text\r\n      },\r\n      [data.chatId+\".date\"]:serverTimestamp()\r\n    })\r\n\r\n    setText(\"\")\r\n    setImg(null)\r\n  }\r\n  return (\r\n    <div className='input'>\r\n      <input type=\"text\" placeholder='Type...' onChange={e=>setText(e.target.value)} value={text} />\r\n      <div className=\"send\">\r\n        {/* <img src={at} alt=\"\" /> */}\r\n        <input type='file' style={{display:'none'}} id='file' onChange={e=>setImg(e.target.files[0])}/>\r\n        <label htmlFor=\"file\">\r\n          <img src={im} alt=\"\"/>\r\n        </label>\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Input"]},"metadata":{},"sourceType":"module"}