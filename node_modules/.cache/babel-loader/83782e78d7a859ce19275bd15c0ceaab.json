{"ast":null,"code":"// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n'use strict';\n\nconst detectLibc = require('detect-libc');\n\nconst env = process.env;\n\nmodule.exports = function () {\n  const arch = env.npm_config_arch || process.arch;\n  const platform = env.npm_config_platform || process.platform;\n  const libc = process.env.npm_config_libc || (\n  /* istanbul ignore next */\n  detectLibc.isNonGlibcLinuxSync() ? detectLibc.familySync() : '');\n  const libcId = platform !== 'linux' || libc === detectLibc.GLIBC ? '' : libc;\n  const platformId = [`${platform}${libcId}`];\n\n  if (arch === 'arm') {\n    const fallback = process.versions.electron ? '7' : '6';\n    platformId.push(`armv${env.npm_config_arm_version || process.config.variables.arm_version || fallback}`);\n  } else if (arch === 'arm64') {\n    platformId.push(`arm64v${env.npm_config_arm_version || '8'}`);\n  } else {\n    platformId.push(arch);\n  }\n\n  return platformId.join('-');\n};","map":{"version":3,"sources":["D:/VS_Code/VS_Code_general_Workspace/finalYearProject/chatApp/node_modules/sharp/lib/platform.js"],"names":["detectLibc","require","env","process","module","exports","arch","npm_config_arch","platform","npm_config_platform","libc","npm_config_libc","isNonGlibcLinuxSync","familySync","libcId","GLIBC","platformId","fallback","versions","electron","push","npm_config_arm_version","config","variables","arm_version","join"],"mappings":"AAAA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,YAAY;AAC3B,QAAMC,IAAI,GAAGJ,GAAG,CAACK,eAAJ,IAAuBJ,OAAO,CAACG,IAA5C;AACA,QAAME,QAAQ,GAAGN,GAAG,CAACO,mBAAJ,IAA2BN,OAAO,CAACK,QAApD;AACA,QAAME,IAAI,GAAGP,OAAO,CAACD,GAAR,CAAYS,eAAZ;AACX;AACCX,EAAAA,UAAU,CAACY,mBAAX,KAAmCZ,UAAU,CAACa,UAAX,EAAnC,GAA6D,EAFnD,CAAb;AAGA,QAAMC,MAAM,GAAGN,QAAQ,KAAK,OAAb,IAAwBE,IAAI,KAAKV,UAAU,CAACe,KAA5C,GAAoD,EAApD,GAAyDL,IAAxE;AAEA,QAAMM,UAAU,GAAG,CAAE,GAAER,QAAS,GAAEM,MAAO,EAAtB,CAAnB;;AAEA,MAAIR,IAAI,KAAK,KAAb,EAAoB;AAClB,UAAMW,QAAQ,GAAGd,OAAO,CAACe,QAAR,CAAiBC,QAAjB,GAA4B,GAA5B,GAAkC,GAAnD;AACAH,IAAAA,UAAU,CAACI,IAAX,CAAiB,OAAMlB,GAAG,CAACmB,sBAAJ,IAA8BlB,OAAO,CAACmB,MAAR,CAAeC,SAAf,CAAyBC,WAAvD,IAAsEP,QAAS,EAAtG;AACD,GAHD,MAGO,IAAIX,IAAI,KAAK,OAAb,EAAsB;AAC3BU,IAAAA,UAAU,CAACI,IAAX,CAAiB,SAAQlB,GAAG,CAACmB,sBAAJ,IAA8B,GAAI,EAA3D;AACD,GAFM,MAEA;AACLL,IAAAA,UAAU,CAACI,IAAX,CAAgBd,IAAhB;AACD;;AAED,SAAOU,UAAU,CAACS,IAAX,CAAgB,GAAhB,CAAP;AACD,CApBD","sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst detectLibc = require('detect-libc');\n\nconst env = process.env;\n\nmodule.exports = function () {\n  const arch = env.npm_config_arch || process.arch;\n  const platform = env.npm_config_platform || process.platform;\n  const libc = process.env.npm_config_libc ||\n    /* istanbul ignore next */\n    (detectLibc.isNonGlibcLinuxSync() ? detectLibc.familySync() : '');\n  const libcId = platform !== 'linux' || libc === detectLibc.GLIBC ? '' : libc;\n\n  const platformId = [`${platform}${libcId}`];\n\n  if (arch === 'arm') {\n    const fallback = process.versions.electron ? '7' : '6';\n    platformId.push(`armv${env.npm_config_arm_version || process.config.variables.arm_version || fallback}`);\n  } else if (arch === 'arm64') {\n    platformId.push(`arm64v${env.npm_config_arm_version || '8'}`);\n  } else {\n    platformId.push(arch);\n  }\n\n  return platformId.join('-');\n};\n"]},"metadata":{},"sourceType":"script"}