{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_Code\\\\VS_Code_general_Workspace\\\\steganography_project\\\\src\\\\context\\\\ChatContext.js\",\n    _s = $RefreshSig$();\n\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { createContext, useState, useEffect, useContext, useReducer } from \"react\";\nimport { auth } from \"../firebase\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const INITIAL_STATE = {\n    chatId: \"null\",\n    user: {}\n  };\n\n  const chatReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE_USER\":\n        return {\n          user: action.payload,\n          chatId: currentUser.uid > action.payload.uid ? currentUser.uid + action.payload.uid : action.payload.uid + currentUser.uid\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      data: state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 1\n  }, this);\n};\n\n_s(ChatContextProvider, \"oxNZJ0VeS14VTXMH/cW6nlJfor8=\");\n\n_c = ChatContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContextProvider\");","map":{"version":3,"sources":["D:/VS_Code/VS_Code_general_Workspace/steganography_project/src/context/ChatContext.js"],"names":["onAuthStateChanged","createContext","useState","useEffect","useContext","useReducer","auth","AuthContext","ChatContext","ChatContextProvider","children","currentUser","INITIAL_STATE","chatId","user","chatReducer","state","action","type","payload","uid","dispatch","data"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,eAAnC;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,UAA7C,EAAyDC,UAAzD,QAA0E,OAA1E;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,WAAW,gBAACP,aAAa,EAA/B;AACP,OAAO,MAAMQ,mBAAmB,GAAC,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAC3C,QAAM;AAACC,IAAAA;AAAD,MAAcP,UAAU,CAACG,WAAD,CAA9B;AACD,QAAMK,aAAa,GAAC;AACnBC,IAAAA,MAAM,EAAC,MADY;AAEnBC,IAAAA,IAAI,EAAC;AAFc,GAApB;;AAKA,QAAMC,WAAW,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACjC,YAAOA,MAAM,CAACC,IAAd;AACI,WAAK,aAAL;AACI,eAAM;AACFJ,UAAAA,IAAI,EAACG,MAAM,CAACE,OADV;AAEFN,UAAAA,MAAM,EAACF,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GAAjC,GAAuCT,WAAW,CAACS,GAAZ,GAAgBH,MAAM,CAACE,OAAP,CAAeC,GAAtE,GAA0EH,MAAM,CAACE,OAAP,CAAeC,GAAf,GAAmBT,WAAW,CAACS;AAF9G,SAAN;;AAIA;AACI,eAAOJ,KAAP;AAPZ;AASA,GAVD;;AAWA,QAAM,CAACA,KAAD,EAAOK,QAAP,IAAiBhB,UAAU,CAACU,WAAD,EAAaH,aAAb,CAAjC;AACH,sBACA,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACU,MAAAA,IAAI,EAACN,KAAN;AAAYK,MAAAA;AAAZ,KAA7B;AAAA,cACKX;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAKC,CAxBM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["import { onAuthStateChanged } from \"firebase/auth\";\r\nimport { createContext, useState ,useEffect, useContext, useReducer} from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nexport const ChatContext=createContext()\r\nexport const ChatContextProvider=({children})=>{\r\n    const {currentUser}=useContext(AuthContext)\r\n   const INITIAL_STATE={\r\n    chatId:\"null\",\r\n    user:{}\r\n   }\r\n\r\n   const chatReducer=(state,action)=>{\r\n    switch(action.type){\r\n        case \"CHANGE_USER\":\r\n            return{\r\n                user:action.payload,\r\n                chatId:currentUser.uid > action.payload.uid ? currentUser.uid+action.payload.uid:action.payload.uid+currentUser.uid\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n   }\r\n   const [state,dispatch]=useReducer(chatReducer,INITIAL_STATE)\r\nreturn (\r\n<ChatContext.Provider value={{data:state,dispatch}}>\r\n    {children}\r\n</ChatContext.Provider>\r\n);\r\n}"]},"metadata":{},"sourceType":"module"}